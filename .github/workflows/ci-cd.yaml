name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: jbrcoleman/historical-network

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate image tag with Git SHA
        id: tag
        run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Kubernetes manifests
      if: github.event_name != 'pull_request'
      run: |
        # Setup Git config with PAT for authentication
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Configure Git to use the token
        git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}
        
        # Update the image tag in the ConfigMap
        sed -i "s/tag: \".*\"/tag: \"${{ env.IMAGE_TAG }}\"/g" k8s/image-config.yaml
        
        # Commit and push if there are changes
        git add k8s/image-config.yaml
        git diff --quiet && git diff --staged --quiet || git commit -m "Update image tag to ${{ env.IMAGE_TAG }}"
        git push